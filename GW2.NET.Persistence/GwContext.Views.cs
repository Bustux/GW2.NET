//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(GW2DotNET.Persistence.GwContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets93b5260869eef44cc52815fbba8e227138a9d12d8cfc2d5a5e81666376f9d4f3))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets93b5260869eef44cc52815fbba8e227138a9d12d8cfc2d5a5e81666376f9d4f3 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "93b5260869eef44cc52815fbba8e227138a9d12d8cfc2d5a5e81666376f9d4f3"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Ingredient")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.Item")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.ItemAttribute")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.InfusionSlot")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.Recipe")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.CombatItemItemAttribute")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.UpgradeComponentItemAttribute")
            {
                return GetView6();
            }

            if (extentName == "CodeFirstDatabase.RecipeIngredient")
            {
                return GetView7();
            }

            if (extentName == "GwContext.Ingredients")
            {
                return GetView8();
            }

            if (extentName == "GwContext.Items")
            {
                return GetView9();
            }

            if (extentName == "GwContext.ItemAttributes")
            {
                return GetView10();
            }

            if (extentName == "GwContext.InfusionSlots")
            {
                return GetView11();
            }

            if (extentName == "GwContext.CombatItem_InfusionSlots")
            {
                return GetView12();
            }

            if (extentName == "GwContext.Recipes")
            {
                return GetView13();
            }

            if (extentName == "GwContext.CombatItem_Attributes")
            {
                return GetView14();
            }

            if (extentName == "GwContext.UpgradeComponent_Attributes")
            {
                return GetView15();
            }

            if (extentName == "GwContext.Recipe_Ingredients")
            {
                return GetView16();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Ingredient.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Ingredient
        [CodeFirstDatabaseSchema.Ingredient](T1.Ingredient_ItemId, T1.Ingredient_Count, T1.Ingredient_Language)
    FROM (
        SELECT 
            T.ItemId AS Ingredient_ItemId, 
            T.Count AS Ingredient_Count, 
            T.Language AS Ingredient_Language, 
            True AS _from0
        FROM GwContext.Ingredients AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Item.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Item
        [CodeFirstDatabaseSchema.Item](T2.Item_ItemId, T2.Item_Language, T2.Item_BuildId, T2.Item_Description, T2.Item_FileId, T2.Item_FileSignature, T2.Item_Flags, T2.Item_GameTypes, T2.Item_Level, T2.Item_Name, T2.Item_Rarity, T2.Item_Restrictions, T2.Item_VendorValue, T2.Item_NoSellOrSort, T2.Item_Size, T2.Item_SecondarySuffixItemId, T2.Item_SuffixItemId, T2.[Item.Buff_Description], T2.[Item.Buff_SkillId], T2.Item_DefaultSkin, T2.Item_Defense, T2.Item_WeightClass, T2.Item_DefaultSkin1, T2.Item_DamageType, T2.Item_DefaultSkin2, T2.Item_Defense1, T2.Item_MaximumPower, T2.Item_MinimumPower, T2.Item_Duration, T2.Item_RecipeId, T2.Item_ColorId, T2.Item_DefaultSkin3, T2.Item_Charges, T2.Item_InfusionUpgradeFlags, T2.Item_Suffix, T2.Item_UpgradeComponentFlags, T2.[Item.Buff_Description1], T2.[Item.Buff_SkillId1], T2.Item_Discriminator)
    FROM (
        SELECT -- Constructing Discriminator
            T1.Item_ItemId, 
            T1.Item_Language, 
            T1.Item_BuildId, 
            T1.Item_Description, 
            T1.Item_FileId, 
            T1.Item_FileSignature, 
            T1.Item_Flags, 
            T1.Item_GameTypes, 
            T1.Item_Level, 
            T1.Item_Name, 
            T1.Item_Rarity, 
            T1.Item_Restrictions, 
            T1.Item_VendorValue, 
            T1.Item_NoSellOrSort, 
            T1.Item_Size, 
            T1.Item_SecondarySuffixItemId, 
            T1.Item_SuffixItemId, 
            T1.[Item.Buff_Description], 
            T1.[Item.Buff_SkillId], 
            T1.Item_DefaultSkin, 
            T1.Item_Defense, 
            T1.Item_WeightClass, 
            T1.Item_DefaultSkin1, 
            T1.Item_DamageType, 
            T1.Item_DefaultSkin2, 
            T1.Item_Defense1, 
            T1.Item_MaximumPower, 
            T1.Item_MinimumPower, 
            T1.Item_Duration, 
            T1.Item_RecipeId, 
            T1.Item_ColorId, 
            T1.Item_DefaultSkin3, 
            T1.Item_Charges, 
            T1.Item_InfusionUpgradeFlags, 
            T1.Item_Suffix, 
            T1.Item_UpgradeComponentFlags, 
            T1.[Item.Buff_Description1], 
            T1.[Item.Buff_SkillId1], 
            CASE
                WHEN T1._from43 THEN N'Bag'
                WHEN T1._from26 THEN N'AquaticHelm'
                WHEN T1._from27 THEN N'Boots'
                WHEN T1._from28 THEN N'Coat'
                WHEN T1._from29 THEN N'Gloves'
                WHEN T1._from30 THEN N'Helm'
                WHEN T1._from31 THEN N'Leggings'
                WHEN T1._from32 THEN N'Shoulders'
                WHEN T1._from25 THEN N'UnknownArmor'
                WHEN T1._from33 THEN N'Backpack'
                WHEN T1._from39 THEN N'Accessory'
                WHEN T1._from40 THEN N'Amulet'
                WHEN T1._from41 THEN N'Ring'
                WHEN T1._from42 THEN N'UnknownTrinket'
                WHEN T1._from1 THEN N'Axe'
                WHEN T1._from2 THEN N'Dagger'
                WHEN T1._from3 THEN N'Focus'
                WHEN T1._from4 THEN N'GreatSword'
                WHEN T1._from5 THEN N'Hammer'
                WHEN T1._from6 THEN N'Harpoon'
                WHEN T1._from7 THEN N'LargeBundle'
                WHEN T1._from8 THEN N'LongBow'
                WHEN T1._from9 THEN N'Mace'
                WHEN T1._from10 THEN N'Pistol'
                WHEN T1._from11 THEN N'Rifle'
                WHEN T1._from12 THEN N'Scepter'
                WHEN T1._from13 THEN N'Shield'
                WHEN T1._from14 THEN N'ShortBow'
                WHEN T1._from15 THEN N'SmallBundle'
                WHEN T1._from16 THEN N'SpearGun'
                WHEN T1._from17 THEN N'Staff'
                WHEN T1._from18 THEN N'Sword'
                WHEN T1._from19 THEN N'Torch'
                WHEN T1._from20 THEN N'ToyWeapon'
                WHEN T1._from21 THEN N'Trident'
                WHEN T1._from22 THEN N'TwoHandedToyWeapon'
                WHEN T1._from23 THEN N'UnknownWeapon'
                WHEN T1._from24 THEN N'WarHorn'
                WHEN T1._from54 THEN N'AppearanceChanger'
                WHEN T1._from55 THEN N'Booze'
                WHEN T1._from56 THEN N'ContractNpc'
                WHEN T1._from57 THEN N'HalloweenConsumable'
                WHEN T1._from58 THEN N'ImmediateConsumable'
                WHEN T1._from44 THEN N'Food'
                WHEN T1._from45 THEN N'GenericConsumable'
                WHEN T1._from46 THEN N'Utility'
                WHEN T1._from59 THEN N'Transmutation'
                WHEN T1._from60 THEN N'UnknownConsumable'
                WHEN T1._from61 THEN N'BagSlotUnlocker'
                WHEN T1._from62 THEN N'BankTabUnlocker'
                WHEN T1._from63 THEN N'CollectibleCapacityUnlocker'
                WHEN T1._from64 THEN N'ContentUnlocker'
                WHEN T1._from47 THEN N'CraftingRecipeUnlocker'
                WHEN T1._from48 THEN N'DyeUnlocker'
                WHEN T1._from65 THEN N'UnknownUnlocker'
                WHEN T1._from66 THEN N'UnTransmutation'
                WHEN T1._from67 THEN N'UpgradeRemoval'
                WHEN T1._from68 THEN N'DefaultContainer'
                WHEN T1._from69 THEN N'GiftBox'
                WHEN T1._from70 THEN N'UnknownContainer'
                WHEN T1._from71 THEN N'CraftingMaterial'
                WHEN T1._from49 THEN N'ForagingTool'
                WHEN T1._from50 THEN N'LoggingTool'
                WHEN T1._from51 THEN N'MiningTool'
                WHEN T1._from52 THEN N'UnknownGatheringTool'
                WHEN T1._from72 THEN N'DefaultGizmo'
                WHEN T1._from73 THEN N'RentableContractNpc'
                WHEN T1._from74 THEN N'UnknownGizmo'
                WHEN T1._from75 THEN N'UnlimitedConsumable'
                WHEN T1._from76 THEN N'MiniPet'
                WHEN T1._from53 THEN N'SalvageTool'
                WHEN T1._from77 THEN N'UnknownTool'
                WHEN T1._from78 THEN N'Trophy'
                WHEN T1._from79 THEN N'UnknownItem'
                WHEN T1._from34 THEN N'DefaultUpgradeComponent'
                WHEN T1._from35 THEN N'Gem'
                WHEN T1._from36 THEN N'Rune'
                WHEN T1._from37 THEN N'Sigil'
                ELSE N'UnknownUpgradeComponent'
            END AS Item_Discriminator
        FROM (
            SELECT 
                T.ItemId AS Item_ItemId, 
                T.Language AS Item_Language, 
                T.BuildId AS Item_BuildId, 
                T.Description AS Item_Description, 
                T.FileId AS Item_FileId, 
                T.FileSignature AS Item_FileSignature, 
                CAST(T.Flags AS [Edm.Int32]) AS Item_Flags, 
                CAST(T.GameTypes AS [Edm.Int32]) AS Item_GameTypes, 
                T.Level AS Item_Level, 
                T.Name AS Item_Name, 
                CAST(T.Rarity AS [Edm.Int32]) AS Item_Rarity, 
                CAST(T.Restrictions AS [Edm.Int32]) AS Item_Restrictions, 
                T.VendorValue AS Item_VendorValue, 
                TREAT(T AS [GW2DotNET.Persistence.Bag]).NoSellOrSort AS Item_NoSellOrSort, 
                TREAT(T AS [GW2DotNET.Persistence.Bag]).Size AS Item_Size, 
                TREAT(T AS [GW2DotNET.Persistence.CombatItem]).SecondarySuffixItemId AS Item_SecondarySuffixItemId, 
                TREAT(T AS [GW2DotNET.Persistence.CombatItem]).SuffixItemId AS Item_SuffixItemId, 
                TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff.Description AS [Item.Buff_Description], 
                TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff.SkillId AS [Item.Buff_SkillId], 
                TREAT(T AS [GW2DotNET.Persistence.Armor]).DefaultSkin AS Item_DefaultSkin, 
                TREAT(T AS [GW2DotNET.Persistence.Armor]).Defense AS Item_Defense, 
                CAST(TREAT(T AS [GW2DotNET.Persistence.Armor]).WeightClass AS [Edm.Int32]) AS Item_WeightClass, 
                TREAT(T AS [GW2DotNET.Persistence.Backpack]).DefaultSkin AS Item_DefaultSkin1, 
                CAST(TREAT(T AS [GW2DotNET.Persistence.Weapon]).DamageType AS [Edm.Int32]) AS Item_DamageType, 
                TREAT(T AS [GW2DotNET.Persistence.Weapon]).DefaultSkin AS Item_DefaultSkin2, 
                TREAT(T AS [GW2DotNET.Persistence.Weapon]).Defense AS Item_Defense1, 
                TREAT(T AS [GW2DotNET.Persistence.Weapon]).MaximumPower AS Item_MaximumPower, 
                TREAT(T AS [GW2DotNET.Persistence.Weapon]).MinimumPower AS Item_MinimumPower, 
                TREAT(T AS [GW2DotNET.Persistence.Nourishment]).Duration AS Item_Duration, 
                TREAT(T AS [GW2DotNET.Persistence.CraftingRecipeUnlocker]).RecipeId AS Item_RecipeId, 
                TREAT(T AS [GW2DotNET.Persistence.DyeUnlocker]).ColorId AS Item_ColorId, 
                TREAT(T AS [GW2DotNET.Persistence.GatheringTool]).DefaultSkin AS Item_DefaultSkin3, 
                TREAT(T AS [GW2DotNET.Persistence.SalvageTool]).Charges AS Item_Charges, 
                CAST(TREAT(T AS [GW2DotNET.Persistence.UpgradeComponent]).InfusionUpgradeFlags AS [Edm.Int32]) AS Item_InfusionUpgradeFlags, 
                TREAT(T AS [GW2DotNET.Persistence.UpgradeComponent]).Suffix AS Item_Suffix, 
                CAST(TREAT(T AS [GW2DotNET.Persistence.UpgradeComponent]).UpgradeComponentFlags AS [Edm.Int32]) AS Item_UpgradeComponentFlags, 
                TREAT(T AS [GW2DotNET.Persistence.UpgradeComponent]).Buff.Description AS [Item.Buff_Description1], 
                TREAT(T AS [GW2DotNET.Persistence.UpgradeComponent]).Buff.SkillId AS [Item.Buff_SkillId1], 
                True AS _from0, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Axe]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from1, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Dagger]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from2, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Focus]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from3, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.GreatSword]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from4, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Hammer]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from5, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Harpoon]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from6, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.LargeBundle]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from7, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.LongBow]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from8, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Mace]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from9, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Pistol]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from10, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Rifle]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from11, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Scepter]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from12, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Shield]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from13, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.ShortBow]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from14, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.SmallBundle]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from15, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.SpearGun]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from16, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Staff]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from17, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Sword]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from18, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Torch]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from19, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.ToyWeapon]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from20, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Trident]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from21, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.TwoHandedToyWeapon]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from22, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.UnknownWeapon]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from23, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.WarHorn]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from24, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.UnknownArmor]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from25, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.AquaticHelm]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from26, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Boots]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from27, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Coat]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from28, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Gloves]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from29, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Helm]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from30, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Leggings]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from31, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Shoulders]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from32, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Backpack]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from33, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.DefaultUpgradeComponent]) AND TREAT(T AS [GW2DotNET.Persistence.UpgradeComponent]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from34, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Gem]) AND TREAT(T AS [GW2DotNET.Persistence.UpgradeComponent]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from35, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Rune]) AND TREAT(T AS [GW2DotNET.Persistence.UpgradeComponent]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from36, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Sigil]) AND TREAT(T AS [GW2DotNET.Persistence.UpgradeComponent]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from37, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.UnknownUpgradeComponent]) AND TREAT(T AS [GW2DotNET.Persistence.UpgradeComponent]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from38, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Accessory]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from39, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Amulet]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from40, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.Ring]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from41, 
                CASE WHEN (T IS OF (ONLY [GW2DotNET.Persistence.UnknownTrinket]) AND TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) THEN True ELSE False END AS _from42, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.Bag]) THEN True ELSE False END AS _from43, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.Food]) THEN True ELSE False END AS _from44, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.GenericConsumable]) THEN True ELSE False END AS _from45, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.Utility]) THEN True ELSE False END AS _from46, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.CraftingRecipeUnlocker]) THEN True ELSE False END AS _from47, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.DyeUnlocker]) THEN True ELSE False END AS _from48, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.ForagingTool]) THEN True ELSE False END AS _from49, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.LoggingTool]) THEN True ELSE False END AS _from50, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.MiningTool]) THEN True ELSE False END AS _from51, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.UnknownGatheringTool]) THEN True ELSE False END AS _from52, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.SalvageTool]) THEN True ELSE False END AS _from53, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.AppearanceChanger]) THEN True ELSE False END AS _from54, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.Booze]) THEN True ELSE False END AS _from55, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.ContractNpc]) THEN True ELSE False END AS _from56, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.HalloweenConsumable]) THEN True ELSE False END AS _from57, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.ImmediateConsumable]) THEN True ELSE False END AS _from58, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.Transmutation]) THEN True ELSE False END AS _from59, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.UnknownConsumable]) THEN True ELSE False END AS _from60, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.BagSlotUnlocker]) THEN True ELSE False END AS _from61, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.BankTabUnlocker]) THEN True ELSE False END AS _from62, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.CollectibleCapacityUnlocker]) THEN True ELSE False END AS _from63, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.ContentUnlocker]) THEN True ELSE False END AS _from64, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.UnknownUnlocker]) THEN True ELSE False END AS _from65, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.UnTransmutation]) THEN True ELSE False END AS _from66, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.UpgradeRemoval]) THEN True ELSE False END AS _from67, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.DefaultContainer]) THEN True ELSE False END AS _from68, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.GiftBox]) THEN True ELSE False END AS _from69, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.UnknownContainer]) THEN True ELSE False END AS _from70, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.CraftingMaterial]) THEN True ELSE False END AS _from71, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.DefaultGizmo]) THEN True ELSE False END AS _from72, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.RentableContractNpc]) THEN True ELSE False END AS _from73, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.UnknownGizmo]) THEN True ELSE False END AS _from74, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.UnlimitedConsumable]) THEN True ELSE False END AS _from75, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.MiniPet]) THEN True ELSE False END AS _from76, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.UnknownTool]) THEN True ELSE False END AS _from77, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.Trophy]) THEN True ELSE False END AS _from78, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.UnknownItem]) THEN True ELSE False END AS _from79
            FROM GwContext.Items AS T
            WHERE (((T IS OF (ONLY [GW2DotNET.Persistence.Bag]) OR T IS OF (ONLY [GW2DotNET.Persistence.AppearanceChanger]) OR T IS OF (ONLY [GW2DotNET.Persistence.Booze]) OR T IS OF (ONLY [GW2DotNET.Persistence.ContractNpc]) OR T IS OF (ONLY [GW2DotNET.Persistence.HalloweenConsumable]) OR T IS OF (ONLY [GW2DotNET.Persistence.ImmediateConsumable]) OR T IS OF (ONLY [GW2DotNET.Persistence.Food]) OR T IS OF (ONLY [GW2DotNET.Persistence.GenericConsumable]) OR T IS OF (ONLY [GW2DotNET.Persistence.Utility]) OR T IS OF (ONLY [GW2DotNET.Persistence.Transmutation]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownConsumable]) OR T IS OF (ONLY [GW2DotNET.Persistence.BagSlotUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.BankTabUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.CollectibleCapacityUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.ContentUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.CraftingRecipeUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.DyeUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnTransmutation]) OR T IS OF (ONLY [GW2DotNET.Persistence.UpgradeRemoval]) OR T IS OF (ONLY [GW2DotNET.Persistence.DefaultContainer]) OR T IS OF (ONLY [GW2DotNET.Persistence.GiftBox]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownContainer]) OR T IS OF (ONLY [GW2DotNET.Persistence.CraftingMaterial]) OR T IS OF (ONLY [GW2DotNET.Persistence.ForagingTool]) OR T IS OF (ONLY [GW2DotNET.Persistence.LoggingTool]) OR T IS OF (ONLY [GW2DotNET.Persistence.MiningTool]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownGatheringTool]) OR T IS OF (ONLY [GW2DotNET.Persistence.DefaultGizmo]) OR T IS OF (ONLY [GW2DotNET.Persistence.RentableContractNpc]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownGizmo]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnlimitedConsumable]) OR T IS OF (ONLY [GW2DotNET.Persistence.MiniPet]) OR T IS OF (ONLY [GW2DotNET.Persistence.SalvageTool]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownTool]) OR T IS OF (ONLY [GW2DotNET.Persistence.Trophy]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownItem]) OR T IS OF (ONLY [GW2DotNET.Persistence.DefaultUpgradeComponent]) OR T IS OF (ONLY [GW2DotNET.Persistence.Gem]) OR T IS OF (ONLY [GW2DotNET.Persistence.Rune]) OR T IS OF (ONLY [GW2DotNET.Persistence.Sigil]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownUpgradeComponent])) OR TREAT(T AS [GW2DotNET.Persistence.CombatItem]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])) AND ((T IS OF (ONLY [GW2DotNET.Persistence.Bag]) OR T IS OF (ONLY [GW2DotNET.Persistence.AquaticHelm]) OR T IS OF (ONLY [GW2DotNET.Persistence.Boots]) OR T IS OF (ONLY [GW2DotNET.Persistence.Coat]) OR T IS OF (ONLY [GW2DotNET.Persistence.Gloves]) OR T IS OF (ONLY [GW2DotNET.Persistence.Helm]) OR T IS OF (ONLY [GW2DotNET.Persistence.Leggings]) OR T IS OF (ONLY [GW2DotNET.Persistence.Shoulders]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownArmor]) OR T IS OF (ONLY [GW2DotNET.Persistence.Backpack]) OR T IS OF (ONLY [GW2DotNET.Persistence.Accessory]) OR T IS OF (ONLY [GW2DotNET.Persistence.Amulet]) OR T IS OF (ONLY [GW2DotNET.Persistence.Ring]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownTrinket]) OR T IS OF (ONLY [GW2DotNET.Persistence.Axe]) OR T IS OF (ONLY [GW2DotNET.Persistence.Dagger]) OR T IS OF (ONLY [GW2DotNET.Persistence.Focus]) OR T IS OF (ONLY [GW2DotNET.Persistence.GreatSword]) OR T IS OF (ONLY [GW2DotNET.Persistence.Hammer]) OR T IS OF (ONLY [GW2DotNET.Persistence.Harpoon]) OR T IS OF (ONLY [GW2DotNET.Persistence.LargeBundle]) OR T IS OF (ONLY [GW2DotNET.Persistence.LongBow]) OR T IS OF (ONLY [GW2DotNET.Persistence.Mace]) OR T IS OF (ONLY [GW2DotNET.Persistence.Pistol]) OR T IS OF (ONLY [GW2DotNET.Persistence.Rifle]) OR T IS OF (ONLY [GW2DotNET.Persistence.Scepter]) OR T IS OF (ONLY [GW2DotNET.Persistence.Shield]) OR T IS OF (ONLY [GW2DotNET.Persistence.ShortBow]) OR T IS OF (ONLY [GW2DotNET.Persistence.SmallBundle]) OR T IS OF (ONLY [GW2DotNET.Persistence.SpearGun]) OR T IS OF (ONLY [GW2DotNET.Persistence.Staff]) OR T IS OF (ONLY [GW2DotNET.Persistence.Sword]) OR T IS OF (ONLY [GW2DotNET.Persistence.Torch]) OR T IS OF (ONLY [GW2DotNET.Persistence.ToyWeapon]) OR T IS OF (ONLY [GW2DotNET.Persistence.Trident]) OR T IS OF (ONLY [GW2DotNET.Persistence.TwoHandedToyWeapon]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownWeapon]) OR T IS OF (ONLY [GW2DotNET.Persistence.WarHorn]) OR T IS OF (ONLY [GW2DotNET.Persistence.AppearanceChanger]) OR T IS OF (ONLY [GW2DotNET.Persistence.Booze]) OR T IS OF (ONLY [GW2DotNET.Persistence.ContractNpc]) OR T IS OF (ONLY [GW2DotNET.Persistence.HalloweenConsumable]) OR T IS OF (ONLY [GW2DotNET.Persistence.ImmediateConsumable]) OR T IS OF (ONLY [GW2DotNET.Persistence.Food]) OR T IS OF (ONLY [GW2DotNET.Persistence.GenericConsumable]) OR T IS OF (ONLY [GW2DotNET.Persistence.Utility]) OR T IS OF (ONLY [GW2DotNET.Persistence.Transmutation]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownConsumable]) OR T IS OF (ONLY [GW2DotNET.Persistence.BagSlotUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.BankTabUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.CollectibleCapacityUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.ContentUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.CraftingRecipeUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.DyeUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownUnlocker]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnTransmutation]) OR T IS OF (ONLY [GW2DotNET.Persistence.UpgradeRemoval]) OR T IS OF (ONLY [GW2DotNET.Persistence.DefaultContainer]) OR T IS OF (ONLY [GW2DotNET.Persistence.GiftBox]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownContainer]) OR T IS OF (ONLY [GW2DotNET.Persistence.CraftingMaterial]) OR T IS OF (ONLY [GW2DotNET.Persistence.ForagingTool]) OR T IS OF (ONLY [GW2DotNET.Persistence.LoggingTool]) OR T IS OF (ONLY [GW2DotNET.Persistence.MiningTool]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownGatheringTool]) OR T IS OF (ONLY [GW2DotNET.Persistence.DefaultGizmo]) OR T IS OF (ONLY [GW2DotNET.Persistence.RentableContractNpc]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownGizmo]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnlimitedConsumable]) OR T IS OF (ONLY [GW2DotNET.Persistence.MiniPet]) OR T IS OF (ONLY [GW2DotNET.Persistence.SalvageTool]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownTool]) OR T IS OF (ONLY [GW2DotNET.Persistence.Trophy]) OR T IS OF (ONLY [GW2DotNET.Persistence.UnknownItem])) OR TREAT(T AS [GW2DotNET.Persistence.UpgradeComponent]).Buff IS OF (ONLY [GW2DotNET.Persistence.ItemBuff])))
        ) AS T1
    ) AS T2");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ItemAttribute.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ItemAttribute
        [CodeFirstDatabaseSchema.ItemAttribute](T1.ItemAttribute_Type, T1.ItemAttribute_Modifier)
    FROM (
        SELECT 
            CAST(T.Type AS [Edm.Int32]) AS ItemAttribute_Type, 
            T.Modifier AS ItemAttribute_Modifier, 
            True AS _from0
        FROM GwContext.ItemAttributes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.InfusionSlot.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing InfusionSlot
        [CodeFirstDatabaseSchema.InfusionSlot](T4.InfusionSlot_Id, T4.InfusionSlot_Flags, T4.InfusionSlot_ItemId, T4.[InfusionSlot.CombatItem_ItemId], T4.[InfusionSlot.CombatItem_Language])
    FROM (
        SELECT -- Constructing CombatItem_ItemId
            T3.InfusionSlot_Id, 
            T3.InfusionSlot_Flags, 
            T3.InfusionSlot_ItemId, 
            CASE
                WHEN T3._from0 THEN T3.[InfusionSlot.CombatItem_ItemId]
            END AS [InfusionSlot.CombatItem_ItemId], 
            T3.[InfusionSlot.CombatItem_Language]
        FROM (
            SELECT T1.InfusionSlot_Id, T1.InfusionSlot_Flags, T1.InfusionSlot_ItemId, T2.[InfusionSlot.CombatItem_ItemId], T2.[InfusionSlot.CombatItem_Language], (T2._from0 AND T2._from0 IS NOT NULL) AS _from0, T1._from1
            FROM  (
                SELECT 
                    T.Id AS InfusionSlot_Id, 
                    CAST(T.Flags AS [Edm.Int32]) AS InfusionSlot_Flags, 
                    T.ItemId AS InfusionSlot_ItemId, 
                    True AS _from1
                FROM GwContext.InfusionSlots AS T) AS T1
                LEFT OUTER JOIN (
                SELECT 
                    Key(T.CombatItem_InfusionSlots_Target).Id AS InfusionSlot_Id, 
                    Key(T.CombatItem_InfusionSlots_Source).ItemId AS [InfusionSlot.CombatItem_ItemId], 
                    Key(T.CombatItem_InfusionSlots_Source).Language AS [InfusionSlot.CombatItem_Language], 
                    True AS _from0
                FROM GwContext.CombatItem_InfusionSlots AS T) AS T2
                ON T1.InfusionSlot_Id = T2.InfusionSlot_Id
        ) AS T3
    ) AS T4");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Recipe.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Recipe
        [CodeFirstDatabaseSchema.Recipe](T2.Recipe_RecipeId, T2.Recipe_Language, T2.Recipe_BuildId, T2.Recipe_CraftingDisciplines, T2.Recipe_Flags, T2.Recipe_MinimumRating, T2.Recipe_OutputItemCount, T2.Recipe_OutputItemId, T2.Recipe_TimeToCraft, T2.Recipe_Discriminator)
    FROM (
        SELECT -- Constructing Discriminator
            T1.Recipe_RecipeId, 
            T1.Recipe_Language, 
            T1.Recipe_BuildId, 
            T1.Recipe_CraftingDisciplines, 
            T1.Recipe_Flags, 
            T1.Recipe_MinimumRating, 
            T1.Recipe_OutputItemCount, 
            T1.Recipe_OutputItemId, 
            T1.Recipe_TimeToCraft, 
            CASE
                WHEN T1._from34 THEN N'AmuletRecipe'
                WHEN T1._from35 THEN N'AxeRecipe'
                WHEN T1._from36 THEN N'BackpackRecipe'
                WHEN T1._from37 THEN N'BagRecipe'
                WHEN T1._from38 THEN N'BootsRecipe'
                WHEN T1._from39 THEN N'BulkRecipe'
                WHEN T1._from40 THEN N'CoatRecipe'
                WHEN T1._from41 THEN N'ComponentRecipe'
                WHEN T1._from42 THEN N'ConsumableRecipe'
                WHEN T1._from43 THEN N'CookingIngredientRecipe'
                WHEN T1._from44 THEN N'DaggerRecipe'
                WHEN T1._from45 THEN N'DessertRecipe'
                WHEN T1._from46 THEN N'DyeRecipe'
                WHEN T1._from47 THEN N'EarringRecipe'
                WHEN T1._from48 THEN N'FeastRecipe'
                WHEN T1._from49 THEN N'FocusRecipe'
                WHEN T1._from1 THEN N'GlovesRecipe'
                WHEN T1._from2 THEN N'GreatSwordRecipe'
                WHEN T1._from3 THEN N'HammerRecipe'
                WHEN T1._from4 THEN N'HarpoonRecipe'
                WHEN T1._from5 THEN N'HelmRecipe'
                WHEN T1._from6 THEN N'InscriptionRecipe'
                WHEN T1._from7 THEN N'InsigniaRecipe'
                WHEN T1._from8 THEN N'LeggingsRecipe'
                WHEN T1._from9 THEN N'LongBowRecipe'
                WHEN T1._from10 THEN N'MaceRecipe'
                WHEN T1._from11 THEN N'MealRecipe'
                WHEN T1._from12 THEN N'PistolRecipe'
                WHEN T1._from13 THEN N'PotionRecipe'
                WHEN T1._from14 THEN N'RefinementEctoplasmRecipe'
                WHEN T1._from15 THEN N'RefinementObsidianRecipe'
                WHEN T1._from16 THEN N'RefinementRecipe'
                WHEN T1._from17 THEN N'RifleRecipe'
                WHEN T1._from18 THEN N'RingRecipe'
                WHEN T1._from19 THEN N'ScepterRecipe'
                WHEN T1._from20 THEN N'SeasoningRecipe'
                WHEN T1._from21 THEN N'ShieldRecipe'
                WHEN T1._from22 THEN N'ShortBowRecipe'
                WHEN T1._from23 THEN N'ShouldersRecipe'
                WHEN T1._from24 THEN N'SnackRecipe'
                WHEN T1._from25 THEN N'SoupRecipe'
                WHEN T1._from26 THEN N'SpearGunRecipe'
                WHEN T1._from27 THEN N'StaffRecipe'
                WHEN T1._from28 THEN N'SwordRecipe'
                WHEN T1._from29 THEN N'TorchRecipe'
                WHEN T1._from30 THEN N'TridentRecipe'
                WHEN T1._from31 THEN N'UnknownRecipe'
                WHEN T1._from32 THEN N'UpgradeComponentRecipe'
                ELSE N'WarHornRecipe'
            END AS Recipe_Discriminator
        FROM (
            SELECT 
                T.RecipeId AS Recipe_RecipeId, 
                T.Language AS Recipe_Language, 
                T.BuildId AS Recipe_BuildId, 
                CAST(T.CraftingDisciplines AS [Edm.Int32]) AS Recipe_CraftingDisciplines, 
                CAST(T.Flags AS [Edm.Int32]) AS Recipe_Flags, 
                T.MinimumRating AS Recipe_MinimumRating, 
                T.OutputItemCount AS Recipe_OutputItemCount, 
                T.OutputItemId AS Recipe_OutputItemId, 
                T.TimeToCraft AS Recipe_TimeToCraft, 
                True AS _from0, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.GlovesRecipe]) THEN True ELSE False END AS _from1, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.GreatSwordRecipe]) THEN True ELSE False END AS _from2, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.HammerRecipe]) THEN True ELSE False END AS _from3, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.HarpoonRecipe]) THEN True ELSE False END AS _from4, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.HelmRecipe]) THEN True ELSE False END AS _from5, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.InscriptionRecipe]) THEN True ELSE False END AS _from6, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.InsigniaRecipe]) THEN True ELSE False END AS _from7, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.LeggingsRecipe]) THEN True ELSE False END AS _from8, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.LongBowRecipe]) THEN True ELSE False END AS _from9, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.MaceRecipe]) THEN True ELSE False END AS _from10, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.MealRecipe]) THEN True ELSE False END AS _from11, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.PistolRecipe]) THEN True ELSE False END AS _from12, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.PotionRecipe]) THEN True ELSE False END AS _from13, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.RefinementEctoplasmRecipe]) THEN True ELSE False END AS _from14, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.RefinementObsidianRecipe]) THEN True ELSE False END AS _from15, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.RefinementRecipe]) THEN True ELSE False END AS _from16, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.RifleRecipe]) THEN True ELSE False END AS _from17, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.RingRecipe]) THEN True ELSE False END AS _from18, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.ScepterRecipe]) THEN True ELSE False END AS _from19, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.SeasoningRecipe]) THEN True ELSE False END AS _from20, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.ShieldRecipe]) THEN True ELSE False END AS _from21, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.ShortBowRecipe]) THEN True ELSE False END AS _from22, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.ShouldersRecipe]) THEN True ELSE False END AS _from23, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.SnackRecipe]) THEN True ELSE False END AS _from24, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.SoupRecipe]) THEN True ELSE False END AS _from25, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.SpearGunRecipe]) THEN True ELSE False END AS _from26, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.StaffRecipe]) THEN True ELSE False END AS _from27, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.SwordRecipe]) THEN True ELSE False END AS _from28, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.TorchRecipe]) THEN True ELSE False END AS _from29, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.TridentRecipe]) THEN True ELSE False END AS _from30, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.UnknownRecipe]) THEN True ELSE False END AS _from31, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.UpgradeComponentRecipe]) THEN True ELSE False END AS _from32, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.WarHornRecipe]) THEN True ELSE False END AS _from33, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.AmuletRecipe]) THEN True ELSE False END AS _from34, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.AxeRecipe]) THEN True ELSE False END AS _from35, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.BackpackRecipe]) THEN True ELSE False END AS _from36, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.BagRecipe]) THEN True ELSE False END AS _from37, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.BootsRecipe]) THEN True ELSE False END AS _from38, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.BulkRecipe]) THEN True ELSE False END AS _from39, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.CoatRecipe]) THEN True ELSE False END AS _from40, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.ComponentRecipe]) THEN True ELSE False END AS _from41, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.ConsumableRecipe]) THEN True ELSE False END AS _from42, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.CookingIngredientRecipe]) THEN True ELSE False END AS _from43, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.DaggerRecipe]) THEN True ELSE False END AS _from44, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.DessertRecipe]) THEN True ELSE False END AS _from45, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.DyeRecipe]) THEN True ELSE False END AS _from46, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.EarringRecipe]) THEN True ELSE False END AS _from47, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.FeastRecipe]) THEN True ELSE False END AS _from48, 
                CASE WHEN T IS OF (ONLY [GW2DotNET.Persistence.FocusRecipe]) THEN True ELSE False END AS _from49
            FROM GwContext.Recipes AS T
        ) AS T1
    ) AS T2");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.CombatItemItemAttribute.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CombatItemItemAttribute
        [CodeFirstDatabaseSchema.CombatItemItemAttribute](T1.[CombatItemItemAttribute.CombatItem_ItemId], T1.[CombatItemItemAttribute.CombatItem_Language], T1.[CombatItemItemAttribute.ItemAttribute_Type], T1.[CombatItemItemAttribute.ItemAttribute_Modifier])
    FROM (
        SELECT 
            Key(T.CombatItem_Attributes_Source).ItemId AS [CombatItemItemAttribute.CombatItem_ItemId], 
            Key(T.CombatItem_Attributes_Source).Language AS [CombatItemItemAttribute.CombatItem_Language], 
            CAST(Key(T.CombatItem_Attributes_Target).Type AS [Edm.Int32]) AS [CombatItemItemAttribute.ItemAttribute_Type], 
            Key(T.CombatItem_Attributes_Target).Modifier AS [CombatItemItemAttribute.ItemAttribute_Modifier], 
            True AS _from0
        FROM GwContext.CombatItem_Attributes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.UpgradeComponentItemAttribute.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UpgradeComponentItemAttribute
        [CodeFirstDatabaseSchema.UpgradeComponentItemAttribute](T1.[UpgradeComponentItemAttribute.UpgradeComponent_ItemId], T1.[UpgradeComponentItemAttribute.UpgradeComponent_Language], T1.[UpgradeComponentItemAttribute.ItemAttribute_Type], T1.[UpgradeComponentItemAttribute.ItemAttribute_Modifier])
    FROM (
        SELECT 
            Key(T.UpgradeComponent_Attributes_Source).ItemId AS [UpgradeComponentItemAttribute.UpgradeComponent_ItemId], 
            Key(T.UpgradeComponent_Attributes_Source).Language AS [UpgradeComponentItemAttribute.UpgradeComponent_Language], 
            CAST(Key(T.UpgradeComponent_Attributes_Target).Type AS [Edm.Int32]) AS [UpgradeComponentItemAttribute.ItemAttribute_Type], 
            Key(T.UpgradeComponent_Attributes_Target).Modifier AS [UpgradeComponentItemAttribute.ItemAttribute_Modifier], 
            True AS _from0
        FROM GwContext.UpgradeComponent_Attributes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.RecipeIngredient.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing RecipeIngredient
        [CodeFirstDatabaseSchema.RecipeIngredient](T1.[RecipeIngredient.Recipe_RecipeId], T1.[RecipeIngredient.Recipe_Language], T1.[RecipeIngredient.Ingredient_ItemId], T1.[RecipeIngredient.Ingredient_Count])
    FROM (
        SELECT 
            Key(T.Recipe_Ingredients_Source).RecipeId AS [RecipeIngredient.Recipe_RecipeId], 
            Key(T.Recipe_Ingredients_Source).Language AS [RecipeIngredient.Recipe_Language], 
            Key(T.Recipe_Ingredients_Target).ItemId AS [RecipeIngredient.Ingredient_ItemId], 
            Key(T.Recipe_Ingredients_Target).Count AS [RecipeIngredient.Ingredient_Count], 
            True AS _from0
        FROM GwContext.Recipe_Ingredients AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GwContext.Ingredients.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Ingredients
        [GW2DotNET.Persistence.Ingredient](T1.Ingredient_ItemId, T1.Ingredient_Count, T1.Ingredient_Language)
    FROM (
        SELECT 
            T.ItemId AS Ingredient_ItemId, 
            T.Count AS Ingredient_Count, 
            T.Language AS Ingredient_Language, 
            True AS _from0
        FROM CodeFirstDatabase.Ingredient AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GwContext.Items.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Items
        CASE
            WHEN T3._from43 THEN [GW2DotNET.Persistence.Bag](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.Bag_NoSellOrSort, T3.Bag_Size)
            WHEN T3._from26 THEN [GW2DotNET.Persistence.AquaticHelm](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Armor_DefaultSkin, T3.Armor_Defense, T3.Armor_WeightClass)
            WHEN T3._from27 THEN [GW2DotNET.Persistence.Boots](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Armor_DefaultSkin, T3.Armor_Defense, T3.Armor_WeightClass)
            WHEN T3._from28 THEN [GW2DotNET.Persistence.Coat](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Armor_DefaultSkin, T3.Armor_Defense, T3.Armor_WeightClass)
            WHEN T3._from29 THEN [GW2DotNET.Persistence.Gloves](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Armor_DefaultSkin, T3.Armor_Defense, T3.Armor_WeightClass)
            WHEN T3._from30 THEN [GW2DotNET.Persistence.Helm](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Armor_DefaultSkin, T3.Armor_Defense, T3.Armor_WeightClass)
            WHEN T3._from31 THEN [GW2DotNET.Persistence.Leggings](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Armor_DefaultSkin, T3.Armor_Defense, T3.Armor_WeightClass)
            WHEN T3._from32 THEN [GW2DotNET.Persistence.Shoulders](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Armor_DefaultSkin, T3.Armor_Defense, T3.Armor_WeightClass)
            WHEN T3._from25 THEN [GW2DotNET.Persistence.UnknownArmor](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Armor_DefaultSkin, T3.Armor_Defense, T3.Armor_WeightClass)
            WHEN T3._from33 THEN [GW2DotNET.Persistence.Backpack](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Backpack_DefaultSkin)
            WHEN T3._from39 THEN [GW2DotNET.Persistence.Accessory](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff)
            WHEN T3._from40 THEN [GW2DotNET.Persistence.Amulet](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff)
            WHEN T3._from41 THEN [GW2DotNET.Persistence.Ring](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff)
            WHEN T3._from42 THEN [GW2DotNET.Persistence.UnknownTrinket](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff)
            WHEN T3._from1 THEN [GW2DotNET.Persistence.Axe](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from2 THEN [GW2DotNET.Persistence.Dagger](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from3 THEN [GW2DotNET.Persistence.Focus](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from4 THEN [GW2DotNET.Persistence.GreatSword](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from5 THEN [GW2DotNET.Persistence.Hammer](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from6 THEN [GW2DotNET.Persistence.Harpoon](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from7 THEN [GW2DotNET.Persistence.LargeBundle](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from8 THEN [GW2DotNET.Persistence.LongBow](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from9 THEN [GW2DotNET.Persistence.Mace](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from10 THEN [GW2DotNET.Persistence.Pistol](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from11 THEN [GW2DotNET.Persistence.Rifle](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from12 THEN [GW2DotNET.Persistence.Scepter](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from13 THEN [GW2DotNET.Persistence.Shield](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from14 THEN [GW2DotNET.Persistence.ShortBow](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from15 THEN [GW2DotNET.Persistence.SmallBundle](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from16 THEN [GW2DotNET.Persistence.SpearGun](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from17 THEN [GW2DotNET.Persistence.Staff](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from18 THEN [GW2DotNET.Persistence.Sword](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from19 THEN [GW2DotNET.Persistence.Torch](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from20 THEN [GW2DotNET.Persistence.ToyWeapon](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from21 THEN [GW2DotNET.Persistence.Trident](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from22 THEN [GW2DotNET.Persistence.TwoHandedToyWeapon](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from23 THEN [GW2DotNET.Persistence.UnknownWeapon](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from24 THEN [GW2DotNET.Persistence.WarHorn](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CombatItem_SecondarySuffixItemId, T3.CombatItem_SuffixItemId, T3.CombatItem_Buff, T3.Weapon_DamageType, T3.Weapon_DefaultSkin, T3.Weapon_Defense, T3.Weapon_MaximumPower, T3.Weapon_MinimumPower)
            WHEN T3._from54 THEN [GW2DotNET.Persistence.AppearanceChanger](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from55 THEN [GW2DotNET.Persistence.Booze](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from56 THEN [GW2DotNET.Persistence.ContractNpc](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from57 THEN [GW2DotNET.Persistence.HalloweenConsumable](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from58 THEN [GW2DotNET.Persistence.ImmediateConsumable](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from44 THEN [GW2DotNET.Persistence.Food](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.Nourishment_Duration)
            WHEN T3._from45 THEN [GW2DotNET.Persistence.GenericConsumable](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.Nourishment_Duration)
            WHEN T3._from46 THEN [GW2DotNET.Persistence.Utility](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.Nourishment_Duration)
            WHEN T3._from59 THEN [GW2DotNET.Persistence.Transmutation](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from60 THEN [GW2DotNET.Persistence.UnknownConsumable](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from61 THEN [GW2DotNET.Persistence.BagSlotUnlocker](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from62 THEN [GW2DotNET.Persistence.BankTabUnlocker](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from63 THEN [GW2DotNET.Persistence.CollectibleCapacityUnlocker](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from64 THEN [GW2DotNET.Persistence.ContentUnlocker](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from47 THEN [GW2DotNET.Persistence.CraftingRecipeUnlocker](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.CraftingRecipeUnlocker_RecipeId)
            WHEN T3._from48 THEN [GW2DotNET.Persistence.DyeUnlocker](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.DyeUnlocker_ColorId)
            WHEN T3._from65 THEN [GW2DotNET.Persistence.UnknownUnlocker](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from66 THEN [GW2DotNET.Persistence.UnTransmutation](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from67 THEN [GW2DotNET.Persistence.UpgradeRemoval](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from68 THEN [GW2DotNET.Persistence.DefaultContainer](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from69 THEN [GW2DotNET.Persistence.GiftBox](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from70 THEN [GW2DotNET.Persistence.UnknownContainer](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from71 THEN [GW2DotNET.Persistence.CraftingMaterial](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from49 THEN [GW2DotNET.Persistence.ForagingTool](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.GatheringTool_DefaultSkin)
            WHEN T3._from50 THEN [GW2DotNET.Persistence.LoggingTool](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.GatheringTool_DefaultSkin)
            WHEN T3._from51 THEN [GW2DotNET.Persistence.MiningTool](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.GatheringTool_DefaultSkin)
            WHEN T3._from52 THEN [GW2DotNET.Persistence.UnknownGatheringTool](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.GatheringTool_DefaultSkin)
            WHEN T3._from72 THEN [GW2DotNET.Persistence.DefaultGizmo](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from73 THEN [GW2DotNET.Persistence.RentableContractNpc](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from74 THEN [GW2DotNET.Persistence.UnknownGizmo](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from75 THEN [GW2DotNET.Persistence.UnlimitedConsumable](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from76 THEN [GW2DotNET.Persistence.MiniPet](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from53 THEN [GW2DotNET.Persistence.SalvageTool](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.SalvageTool_Charges)
            WHEN T3._from77 THEN [GW2DotNET.Persistence.UnknownTool](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from78 THEN [GW2DotNET.Persistence.Trophy](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from79 THEN [GW2DotNET.Persistence.UnknownItem](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue)
            WHEN T3._from34 THEN [GW2DotNET.Persistence.DefaultUpgradeComponent](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.UpgradeComponent_InfusionUpgradeFlags, T3.UpgradeComponent_Suffix, T3.UpgradeComponent_UpgradeComponentFlags, T3.UpgradeComponent_Buff)
            WHEN T3._from35 THEN [GW2DotNET.Persistence.Gem](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.UpgradeComponent_InfusionUpgradeFlags, T3.UpgradeComponent_Suffix, T3.UpgradeComponent_UpgradeComponentFlags, T3.UpgradeComponent_Buff)
            WHEN T3._from36 THEN [GW2DotNET.Persistence.Rune](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.UpgradeComponent_InfusionUpgradeFlags, T3.UpgradeComponent_Suffix, T3.UpgradeComponent_UpgradeComponentFlags, T3.UpgradeComponent_Buff)
            WHEN T3._from37 THEN [GW2DotNET.Persistence.Sigil](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.UpgradeComponent_InfusionUpgradeFlags, T3.UpgradeComponent_Suffix, T3.UpgradeComponent_UpgradeComponentFlags, T3.UpgradeComponent_Buff)
            ELSE [GW2DotNET.Persistence.UnknownUpgradeComponent](T3.Item_ItemId, T3.Item_Language, T3.Item_BuildId, T3.Item_Description, T3.Item_FileId, T3.Item_FileSignature, T3.Item_Flags, T3.Item_GameTypes, T3.Item_Level, T3.Item_Name, T3.Item_Rarity, T3.Item_Restrictions, T3.Item_VendorValue, T3.UpgradeComponent_InfusionUpgradeFlags, T3.UpgradeComponent_Suffix, T3.UpgradeComponent_UpgradeComponentFlags, T3.UpgradeComponent_Buff)
        END
    FROM (
        SELECT -- Constructing Buff
            T2.Item_ItemId, 
            T2.Item_Language, 
            T2.Item_BuildId, 
            T2.Item_Description, 
            T2.Item_FileId, 
            T2.Item_FileSignature, 
            T2.Item_Flags, 
            T2.Item_GameTypes, 
            T2.Item_Level, 
            T2.Item_Name, 
            T2.Item_Rarity, 
            T2.Item_Restrictions, 
            T2.Item_VendorValue, 
            T2.Bag_NoSellOrSort, 
            T2.Bag_Size, 
            T2.CombatItem_SecondarySuffixItemId, 
            T2.CombatItem_SuffixItemId, 
            CASE
                WHEN (T2._from1 OR T2._from2 OR T2._from3 OR T2._from4 OR T2._from5 OR T2._from6 OR T2._from7 OR T2._from8 OR T2._from9 OR T2._from10 OR T2._from11 OR T2._from12 OR T2._from13 OR T2._from14 OR T2._from15 OR T2._from16 OR T2._from17 OR T2._from18 OR T2._from19 OR T2._from20 OR T2._from21 OR T2._from22 OR T2._from23 OR T2._from24 OR T2._from25 OR T2._from26 OR T2._from27 OR T2._from28 OR T2._from29 OR T2._from30 OR T2._from31 OR T2._from32 OR T2._from33 OR T2._from39 OR T2._from40 OR T2._from41 OR T2._from42) THEN [GW2DotNET.Persistence.ItemBuff](T2.CombatItem_Buff_Description, T2.CombatItem_Buff_SkillId)
            END AS CombatItem_Buff, 
            T2.Armor_DefaultSkin, 
            T2.Armor_Defense, 
            T2.Armor_WeightClass, 
            T2.Backpack_DefaultSkin, 
            T2.Weapon_DamageType, 
            T2.Weapon_DefaultSkin, 
            T2.Weapon_Defense, 
            T2.Weapon_MaximumPower, 
            T2.Weapon_MinimumPower, 
            T2.Nourishment_Duration, 
            T2.CraftingRecipeUnlocker_RecipeId, 
            T2.DyeUnlocker_ColorId, 
            T2.GatheringTool_DefaultSkin, 
            T2.SalvageTool_Charges, 
            T2.UpgradeComponent_InfusionUpgradeFlags, 
            T2.UpgradeComponent_Suffix, 
            T2.UpgradeComponent_UpgradeComponentFlags, 
            T2.UpgradeComponent_Buff, 
            T2._from1, 
            T2._from2, 
            T2._from3, 
            T2._from4, 
            T2._from5, 
            T2._from6, 
            T2._from7, 
            T2._from8, 
            T2._from9, 
            T2._from10, 
            T2._from11, 
            T2._from12, 
            T2._from13, 
            T2._from14, 
            T2._from15, 
            T2._from16, 
            T2._from17, 
            T2._from18, 
            T2._from19, 
            T2._from20, 
            T2._from21, 
            T2._from22, 
            T2._from23, 
            T2._from24, 
            T2._from25, 
            T2._from26, 
            T2._from27, 
            T2._from28, 
            T2._from29, 
            T2._from30, 
            T2._from31, 
            T2._from32, 
            T2._from33, 
            T2._from34, 
            T2._from35, 
            T2._from36, 
            T2._from37, 
            T2._from39, 
            T2._from40, 
            T2._from41, 
            T2._from42, 
            T2._from43, 
            T2._from44, 
            T2._from45, 
            T2._from46, 
            T2._from47, 
            T2._from48, 
            T2._from49, 
            T2._from50, 
            T2._from51, 
            T2._from52, 
            T2._from53, 
            T2._from54, 
            T2._from55, 
            T2._from56, 
            T2._from57, 
            T2._from58, 
            T2._from59, 
            T2._from60, 
            T2._from61, 
            T2._from62, 
            T2._from63, 
            T2._from64, 
            T2._from65, 
            T2._from66, 
            T2._from67, 
            T2._from68, 
            T2._from69, 
            T2._from70, 
            T2._from71, 
            T2._from72, 
            T2._from73, 
            T2._from74, 
            T2._from75, 
            T2._from76, 
            T2._from77, 
            T2._from78, 
            T2._from79
        FROM (
            SELECT -- Constructing Buff
                T1.Item_ItemId, 
                T1.Item_Language, 
                T1.Item_BuildId, 
                T1.Item_Description, 
                T1.Item_FileId, 
                T1.Item_FileSignature, 
                T1.Item_Flags, 
                T1.Item_GameTypes, 
                T1.Item_Level, 
                T1.Item_Name, 
                T1.Item_Rarity, 
                T1.Item_Restrictions, 
                T1.Item_VendorValue, 
                T1.Bag_NoSellOrSort, 
                T1.Bag_Size, 
                T1.CombatItem_SecondarySuffixItemId, 
                T1.CombatItem_SuffixItemId, 
                T1.CombatItem_Buff_Description, 
                T1.CombatItem_Buff_SkillId, 
                T1.Armor_DefaultSkin, 
                T1.Armor_Defense, 
                T1.Armor_WeightClass, 
                T1.Backpack_DefaultSkin, 
                T1.Weapon_DamageType, 
                T1.Weapon_DefaultSkin, 
                T1.Weapon_Defense, 
                T1.Weapon_MaximumPower, 
                T1.Weapon_MinimumPower, 
                T1.Nourishment_Duration, 
                T1.CraftingRecipeUnlocker_RecipeId, 
                T1.DyeUnlocker_ColorId, 
                T1.GatheringTool_DefaultSkin, 
                T1.SalvageTool_Charges, 
                T1.UpgradeComponent_InfusionUpgradeFlags, 
                T1.UpgradeComponent_Suffix, 
                T1.UpgradeComponent_UpgradeComponentFlags, 
                CASE
                    WHEN (T1._from34 OR T1._from35 OR T1._from36 OR T1._from37 OR T1._from38) THEN [GW2DotNET.Persistence.ItemBuff](T1.UpgradeComponent_Buff_Description, T1.UpgradeComponent_Buff_SkillId)
                END AS UpgradeComponent_Buff, 
                T1._from1, 
                T1._from2, 
                T1._from3, 
                T1._from4, 
                T1._from5, 
                T1._from6, 
                T1._from7, 
                T1._from8, 
                T1._from9, 
                T1._from10, 
                T1._from11, 
                T1._from12, 
                T1._from13, 
                T1._from14, 
                T1._from15, 
                T1._from16, 
                T1._from17, 
                T1._from18, 
                T1._from19, 
                T1._from20, 
                T1._from21, 
                T1._from22, 
                T1._from23, 
                T1._from24, 
                T1._from25, 
                T1._from26, 
                T1._from27, 
                T1._from28, 
                T1._from29, 
                T1._from30, 
                T1._from31, 
                T1._from32, 
                T1._from33, 
                T1._from34, 
                T1._from35, 
                T1._from36, 
                T1._from37, 
                T1._from39, 
                T1._from40, 
                T1._from41, 
                T1._from42, 
                T1._from43, 
                T1._from44, 
                T1._from45, 
                T1._from46, 
                T1._from47, 
                T1._from48, 
                T1._from49, 
                T1._from50, 
                T1._from51, 
                T1._from52, 
                T1._from53, 
                T1._from54, 
                T1._from55, 
                T1._from56, 
                T1._from57, 
                T1._from58, 
                T1._from59, 
                T1._from60, 
                T1._from61, 
                T1._from62, 
                T1._from63, 
                T1._from64, 
                T1._from65, 
                T1._from66, 
                T1._from67, 
                T1._from68, 
                T1._from69, 
                T1._from70, 
                T1._from71, 
                T1._from72, 
                T1._from73, 
                T1._from74, 
                T1._from75, 
                T1._from76, 
                T1._from77, 
                T1._from78, 
                T1._from79
            FROM (
                SELECT 
                    T.ItemId AS Item_ItemId, 
                    T.Language AS Item_Language, 
                    T.BuildId AS Item_BuildId, 
                    T.Description AS Item_Description, 
                    T.FileId AS Item_FileId, 
                    T.FileSignature AS Item_FileSignature, 
                    CAST(T.Flags AS [GW2DotNET.Persistence.ItemFlags]) AS Item_Flags, 
                    CAST(T.GameTypes AS [GW2DotNET.Persistence.GameRestrictions]) AS Item_GameTypes, 
                    T.Level AS Item_Level, 
                    T.Name AS Item_Name, 
                    CAST(T.Rarity AS [GW2DotNET.Persistence.ItemRarity]) AS Item_Rarity, 
                    CAST(T.Restrictions AS [GW2DotNET.Persistence.ItemRestrictions]) AS Item_Restrictions, 
                    T.VendorValue AS Item_VendorValue, 
                    T.NoSellOrSort AS Bag_NoSellOrSort, 
                    T.Size AS Bag_Size, 
                    T.SecondarySuffixItemId AS CombatItem_SecondarySuffixItemId, 
                    T.SuffixItemId AS CombatItem_SuffixItemId, 
                    T.Buff_Description AS CombatItem_Buff_Description, 
                    T.Buff_SkillId AS CombatItem_Buff_SkillId, 
                    T.DefaultSkin AS Armor_DefaultSkin, 
                    T.Defense AS Armor_Defense, 
                    CAST(T.WeightClass AS [GW2DotNET.Persistence.ArmorWeightClass]) AS Armor_WeightClass, 
                    T.DefaultSkin1 AS Backpack_DefaultSkin, 
                    CAST(T.DamageType AS [GW2DotNET.Persistence.WeaponDamageType]) AS Weapon_DamageType, 
                    T.DefaultSkin2 AS Weapon_DefaultSkin, 
                    T.Defense1 AS Weapon_Defense, 
                    T.MaximumPower AS Weapon_MaximumPower, 
                    T.MinimumPower AS Weapon_MinimumPower, 
                    T.Duration AS Nourishment_Duration, 
                    T.RecipeId AS CraftingRecipeUnlocker_RecipeId, 
                    T.ColorId AS DyeUnlocker_ColorId, 
                    T.DefaultSkin3 AS GatheringTool_DefaultSkin, 
                    T.Charges AS SalvageTool_Charges, 
                    CAST(T.InfusionUpgradeFlags AS [GW2DotNET.Persistence.InfusionSlotTypes]) AS UpgradeComponent_InfusionUpgradeFlags, 
                    T.Suffix AS UpgradeComponent_Suffix, 
                    CAST(T.UpgradeComponentFlags AS [GW2DotNET.Persistence.UpgradeComponentFlags]) AS UpgradeComponent_UpgradeComponentFlags, 
                    T.Buff_Description1 AS UpgradeComponent_Buff_Description, 
                    T.Buff_SkillId1 AS UpgradeComponent_Buff_SkillId, 
                    True AS _from0, 
                    CASE WHEN T.Discriminator = N'Axe' THEN True ELSE False END AS _from1, 
                    CASE WHEN T.Discriminator = N'Dagger' THEN True ELSE False END AS _from2, 
                    CASE WHEN T.Discriminator = N'Focus' THEN True ELSE False END AS _from3, 
                    CASE WHEN T.Discriminator = N'GreatSword' THEN True ELSE False END AS _from4, 
                    CASE WHEN T.Discriminator = N'Hammer' THEN True ELSE False END AS _from5, 
                    CASE WHEN T.Discriminator = N'Harpoon' THEN True ELSE False END AS _from6, 
                    CASE WHEN T.Discriminator = N'LargeBundle' THEN True ELSE False END AS _from7, 
                    CASE WHEN T.Discriminator = N'LongBow' THEN True ELSE False END AS _from8, 
                    CASE WHEN T.Discriminator = N'Mace' THEN True ELSE False END AS _from9, 
                    CASE WHEN T.Discriminator = N'Pistol' THEN True ELSE False END AS _from10, 
                    CASE WHEN T.Discriminator = N'Rifle' THEN True ELSE False END AS _from11, 
                    CASE WHEN T.Discriminator = N'Scepter' THEN True ELSE False END AS _from12, 
                    CASE WHEN T.Discriminator = N'Shield' THEN True ELSE False END AS _from13, 
                    CASE WHEN T.Discriminator = N'ShortBow' THEN True ELSE False END AS _from14, 
                    CASE WHEN T.Discriminator = N'SmallBundle' THEN True ELSE False END AS _from15, 
                    CASE WHEN T.Discriminator = N'SpearGun' THEN True ELSE False END AS _from16, 
                    CASE WHEN T.Discriminator = N'Staff' THEN True ELSE False END AS _from17, 
                    CASE WHEN T.Discriminator = N'Sword' THEN True ELSE False END AS _from18, 
                    CASE WHEN T.Discriminator = N'Torch' THEN True ELSE False END AS _from19, 
                    CASE WHEN T.Discriminator = N'ToyWeapon' THEN True ELSE False END AS _from20, 
                    CASE WHEN T.Discriminator = N'Trident' THEN True ELSE False END AS _from21, 
                    CASE WHEN T.Discriminator = N'TwoHandedToyWeapon' THEN True ELSE False END AS _from22, 
                    CASE WHEN T.Discriminator = N'UnknownWeapon' THEN True ELSE False END AS _from23, 
                    CASE WHEN T.Discriminator = N'WarHorn' THEN True ELSE False END AS _from24, 
                    CASE WHEN T.Discriminator = N'UnknownArmor' THEN True ELSE False END AS _from25, 
                    CASE WHEN T.Discriminator = N'AquaticHelm' THEN True ELSE False END AS _from26, 
                    CASE WHEN T.Discriminator = N'Boots' THEN True ELSE False END AS _from27, 
                    CASE WHEN T.Discriminator = N'Coat' THEN True ELSE False END AS _from28, 
                    CASE WHEN T.Discriminator = N'Gloves' THEN True ELSE False END AS _from29, 
                    CASE WHEN T.Discriminator = N'Helm' THEN True ELSE False END AS _from30, 
                    CASE WHEN T.Discriminator = N'Leggings' THEN True ELSE False END AS _from31, 
                    CASE WHEN T.Discriminator = N'Shoulders' THEN True ELSE False END AS _from32, 
                    CASE WHEN T.Discriminator = N'Backpack' THEN True ELSE False END AS _from33, 
                    CASE WHEN T.Discriminator = N'DefaultUpgradeComponent' THEN True ELSE False END AS _from34, 
                    CASE WHEN T.Discriminator = N'Gem' THEN True ELSE False END AS _from35, 
                    CASE WHEN T.Discriminator = N'Rune' THEN True ELSE False END AS _from36, 
                    CASE WHEN T.Discriminator = N'Sigil' THEN True ELSE False END AS _from37, 
                    CASE WHEN T.Discriminator = N'UnknownUpgradeComponent' THEN True ELSE False END AS _from38, 
                    CASE WHEN T.Discriminator = N'Accessory' THEN True ELSE False END AS _from39, 
                    CASE WHEN T.Discriminator = N'Amulet' THEN True ELSE False END AS _from40, 
                    CASE WHEN T.Discriminator = N'Ring' THEN True ELSE False END AS _from41, 
                    CASE WHEN T.Discriminator = N'UnknownTrinket' THEN True ELSE False END AS _from42, 
                    CASE WHEN T.Discriminator = N'Bag' THEN True ELSE False END AS _from43, 
                    CASE WHEN T.Discriminator = N'Food' THEN True ELSE False END AS _from44, 
                    CASE WHEN T.Discriminator = N'GenericConsumable' THEN True ELSE False END AS _from45, 
                    CASE WHEN T.Discriminator = N'Utility' THEN True ELSE False END AS _from46, 
                    CASE WHEN T.Discriminator = N'CraftingRecipeUnlocker' THEN True ELSE False END AS _from47, 
                    CASE WHEN T.Discriminator = N'DyeUnlocker' THEN True ELSE False END AS _from48, 
                    CASE WHEN T.Discriminator = N'ForagingTool' THEN True ELSE False END AS _from49, 
                    CASE WHEN T.Discriminator = N'LoggingTool' THEN True ELSE False END AS _from50, 
                    CASE WHEN T.Discriminator = N'MiningTool' THEN True ELSE False END AS _from51, 
                    CASE WHEN T.Discriminator = N'UnknownGatheringTool' THEN True ELSE False END AS _from52, 
                    CASE WHEN T.Discriminator = N'SalvageTool' THEN True ELSE False END AS _from53, 
                    CASE WHEN T.Discriminator = N'AppearanceChanger' THEN True ELSE False END AS _from54, 
                    CASE WHEN T.Discriminator = N'Booze' THEN True ELSE False END AS _from55, 
                    CASE WHEN T.Discriminator = N'ContractNpc' THEN True ELSE False END AS _from56, 
                    CASE WHEN T.Discriminator = N'HalloweenConsumable' THEN True ELSE False END AS _from57, 
                    CASE WHEN T.Discriminator = N'ImmediateConsumable' THEN True ELSE False END AS _from58, 
                    CASE WHEN T.Discriminator = N'Transmutation' THEN True ELSE False END AS _from59, 
                    CASE WHEN T.Discriminator = N'UnknownConsumable' THEN True ELSE False END AS _from60, 
                    CASE WHEN T.Discriminator = N'BagSlotUnlocker' THEN True ELSE False END AS _from61, 
                    CASE WHEN T.Discriminator = N'BankTabUnlocker' THEN True ELSE False END AS _from62, 
                    CASE WHEN T.Discriminator = N'CollectibleCapacityUnlocker' THEN True ELSE False END AS _from63, 
                    CASE WHEN T.Discriminator = N'ContentUnlocker' THEN True ELSE False END AS _from64, 
                    CASE WHEN T.Discriminator = N'UnknownUnlocker' THEN True ELSE False END AS _from65, 
                    CASE WHEN T.Discriminator = N'UnTransmutation' THEN True ELSE False END AS _from66, 
                    CASE WHEN T.Discriminator = N'UpgradeRemoval' THEN True ELSE False END AS _from67, 
                    CASE WHEN T.Discriminator = N'DefaultContainer' THEN True ELSE False END AS _from68, 
                    CASE WHEN T.Discriminator = N'GiftBox' THEN True ELSE False END AS _from69, 
                    CASE WHEN T.Discriminator = N'UnknownContainer' THEN True ELSE False END AS _from70, 
                    CASE WHEN T.Discriminator = N'CraftingMaterial' THEN True ELSE False END AS _from71, 
                    CASE WHEN T.Discriminator = N'DefaultGizmo' THEN True ELSE False END AS _from72, 
                    CASE WHEN T.Discriminator = N'RentableContractNpc' THEN True ELSE False END AS _from73, 
                    CASE WHEN T.Discriminator = N'UnknownGizmo' THEN True ELSE False END AS _from74, 
                    CASE WHEN T.Discriminator = N'UnlimitedConsumable' THEN True ELSE False END AS _from75, 
                    CASE WHEN T.Discriminator = N'MiniPet' THEN True ELSE False END AS _from76, 
                    CASE WHEN T.Discriminator = N'UnknownTool' THEN True ELSE False END AS _from77, 
                    CASE WHEN T.Discriminator = N'Trophy' THEN True ELSE False END AS _from78, 
                    CASE WHEN T.Discriminator = N'UnknownItem' THEN True ELSE False END AS _from79
                FROM CodeFirstDatabase.Item AS T
                WHERE T.Discriminator IN {N'Bag', N'AquaticHelm', N'Boots', N'Coat', N'Gloves', N'Helm', N'Leggings', N'Shoulders', N'UnknownArmor', N'Backpack', N'Accessory', N'Amulet', N'Ring', N'UnknownTrinket', N'Axe', N'Dagger', N'Focus', N'GreatSword', N'Hammer', N'Harpoon', N'LargeBundle', N'LongBow', N'Mace', N'Pistol', N'Rifle', N'Scepter', N'Shield', N'ShortBow', N'SmallBundle', N'SpearGun', N'Staff', N'Sword', N'Torch', N'ToyWeapon', N'Trident', N'TwoHandedToyWeapon', N'UnknownWeapon', N'WarHorn', N'AppearanceChanger', N'Booze', N'ContractNpc', N'HalloweenConsumable', N'ImmediateConsumable', N'Food', N'GenericConsumable', N'Utility', N'Transmutation', N'UnknownConsumable', N'BagSlotUnlocker', N'BankTabUnlocker', N'CollectibleCapacityUnlocker', N'ContentUnlocker', N'CraftingRecipeUnlocker', N'DyeUnlocker', N'UnknownUnlocker', N'UnTransmutation', N'UpgradeRemoval', N'DefaultContainer', N'GiftBox', N'UnknownContainer', N'CraftingMaterial', N'ForagingTool', N'LoggingTool', N'MiningTool', N'UnknownGatheringTool', N'DefaultGizmo', N'RentableContractNpc', N'UnknownGizmo', N'UnlimitedConsumable', N'MiniPet', N'SalvageTool', N'UnknownTool', N'Trophy', N'UnknownItem', N'DefaultUpgradeComponent', N'Gem', N'Rune', N'Sigil', N'UnknownUpgradeComponent'}
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for GwContext.ItemAttributes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ItemAttributes
        [GW2DotNET.Persistence.ItemAttribute](T1.ItemAttribute_Type, T1.ItemAttribute_Modifier)
    FROM (
        SELECT 
            CAST(T.Type AS [GW2DotNET.Persistence.ItemAttributeType]) AS ItemAttribute_Type, 
            T.Modifier AS ItemAttribute_Modifier, 
            True AS _from0
        FROM CodeFirstDatabase.ItemAttribute AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GwContext.InfusionSlots.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing InfusionSlots
        [GW2DotNET.Persistence.InfusionSlot](T1.InfusionSlot_Id, T1.InfusionSlot_Flags, T1.InfusionSlot_ItemId) WITH 
        RELATIONSHIP(CREATEREF(GwContext.Items, ROW(T1.[CombatItem_InfusionSlots.CombatItem_InfusionSlots_Source.ItemId], T1.[CombatItem_InfusionSlots.CombatItem_InfusionSlots_Source.Language]),[GW2DotNET.Persistence.CombatItem]),[GW2DotNET.Persistence.CombatItem_InfusionSlots],CombatItem_InfusionSlots_Target,CombatItem_InfusionSlots_Source) 
    FROM (
        SELECT 
            T.Id AS InfusionSlot_Id, 
            CAST(T.Flags AS [GW2DotNET.Persistence.InfusionSlotTypes]) AS InfusionSlot_Flags, 
            T.ItemId AS InfusionSlot_ItemId, 
            True AS _from0, 
            T.CombatItem_ItemId AS [CombatItem_InfusionSlots.CombatItem_InfusionSlots_Source.ItemId], 
            T.CombatItem_Language AS [CombatItem_InfusionSlots.CombatItem_InfusionSlots_Source.Language]
        FROM CodeFirstDatabase.InfusionSlot AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GwContext.CombatItem_InfusionSlots.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CombatItem_InfusionSlots
        [GW2DotNET.Persistence.CombatItem_InfusionSlots](T3.[CombatItem_InfusionSlots.CombatItem_InfusionSlots_Source], T3.[CombatItem_InfusionSlots.CombatItem_InfusionSlots_Target])
    FROM (
        SELECT -- Constructing CombatItem_InfusionSlots_Source
            CreateRef(GwContext.Items, row(T2.[CombatItem_InfusionSlots.CombatItem_InfusionSlots_Source.ItemId], T2.[CombatItem_InfusionSlots.CombatItem_InfusionSlots_Source.Language]), [GW2DotNET.Persistence.CombatItem]) AS [CombatItem_InfusionSlots.CombatItem_InfusionSlots_Source], 
            T2.[CombatItem_InfusionSlots.CombatItem_InfusionSlots_Target]
        FROM (
            SELECT -- Constructing CombatItem_InfusionSlots_Target
                T1.[CombatItem_InfusionSlots.CombatItem_InfusionSlots_Source.ItemId], 
                T1.[CombatItem_InfusionSlots.CombatItem_InfusionSlots_Source.Language], 
                CreateRef(GwContext.InfusionSlots, row(T1.[CombatItem_InfusionSlots.CombatItem_InfusionSlots_Target.Id]), [GW2DotNET.Persistence.InfusionSlot]) AS [CombatItem_InfusionSlots.CombatItem_InfusionSlots_Target]
            FROM (
                SELECT 
                    T.CombatItem_ItemId AS [CombatItem_InfusionSlots.CombatItem_InfusionSlots_Source.ItemId], 
                    T.CombatItem_Language AS [CombatItem_InfusionSlots.CombatItem_InfusionSlots_Source.Language], 
                    T.Id AS [CombatItem_InfusionSlots.CombatItem_InfusionSlots_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.InfusionSlot AS T
                WHERE (T.CombatItem_ItemId IS NOT NULL AND T.CombatItem_Language IS NOT NULL)
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for GwContext.Recipes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Recipes
        CASE
            WHEN T1._from34 THEN [GW2DotNET.Persistence.AmuletRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from35 THEN [GW2DotNET.Persistence.AxeRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from36 THEN [GW2DotNET.Persistence.BackpackRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from37 THEN [GW2DotNET.Persistence.BagRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from38 THEN [GW2DotNET.Persistence.BootsRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from39 THEN [GW2DotNET.Persistence.BulkRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from40 THEN [GW2DotNET.Persistence.CoatRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from41 THEN [GW2DotNET.Persistence.ComponentRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from42 THEN [GW2DotNET.Persistence.ConsumableRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from43 THEN [GW2DotNET.Persistence.CookingIngredientRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from44 THEN [GW2DotNET.Persistence.DaggerRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from45 THEN [GW2DotNET.Persistence.DessertRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from46 THEN [GW2DotNET.Persistence.DyeRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from47 THEN [GW2DotNET.Persistence.EarringRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from48 THEN [GW2DotNET.Persistence.FeastRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from49 THEN [GW2DotNET.Persistence.FocusRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from1 THEN [GW2DotNET.Persistence.GlovesRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from2 THEN [GW2DotNET.Persistence.GreatSwordRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from3 THEN [GW2DotNET.Persistence.HammerRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from4 THEN [GW2DotNET.Persistence.HarpoonRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from5 THEN [GW2DotNET.Persistence.HelmRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from6 THEN [GW2DotNET.Persistence.InscriptionRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from7 THEN [GW2DotNET.Persistence.InsigniaRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from8 THEN [GW2DotNET.Persistence.LeggingsRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from9 THEN [GW2DotNET.Persistence.LongBowRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from10 THEN [GW2DotNET.Persistence.MaceRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from11 THEN [GW2DotNET.Persistence.MealRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from12 THEN [GW2DotNET.Persistence.PistolRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from13 THEN [GW2DotNET.Persistence.PotionRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from14 THEN [GW2DotNET.Persistence.RefinementEctoplasmRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from15 THEN [GW2DotNET.Persistence.RefinementObsidianRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from16 THEN [GW2DotNET.Persistence.RefinementRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from17 THEN [GW2DotNET.Persistence.RifleRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from18 THEN [GW2DotNET.Persistence.RingRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from19 THEN [GW2DotNET.Persistence.ScepterRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from20 THEN [GW2DotNET.Persistence.SeasoningRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from21 THEN [GW2DotNET.Persistence.ShieldRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from22 THEN [GW2DotNET.Persistence.ShortBowRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from23 THEN [GW2DotNET.Persistence.ShouldersRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from24 THEN [GW2DotNET.Persistence.SnackRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from25 THEN [GW2DotNET.Persistence.SoupRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from26 THEN [GW2DotNET.Persistence.SpearGunRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from27 THEN [GW2DotNET.Persistence.StaffRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from28 THEN [GW2DotNET.Persistence.SwordRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from29 THEN [GW2DotNET.Persistence.TorchRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from30 THEN [GW2DotNET.Persistence.TridentRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from31 THEN [GW2DotNET.Persistence.UnknownRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            WHEN T1._from32 THEN [GW2DotNET.Persistence.UpgradeComponentRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
            ELSE [GW2DotNET.Persistence.WarHornRecipe](T1.Recipe_RecipeId, T1.Recipe_Language, T1.Recipe_BuildId, T1.Recipe_CraftingDisciplines, T1.Recipe_Flags, T1.Recipe_MinimumRating, T1.Recipe_OutputItemCount, T1.Recipe_OutputItemId, T1.Recipe_TimeToCraft)
        END
    FROM (
        SELECT 
            T.RecipeId AS Recipe_RecipeId, 
            T.Language AS Recipe_Language, 
            T.BuildId AS Recipe_BuildId, 
            CAST(T.CraftingDisciplines AS [GW2DotNET.Persistence.CraftingDisciplines]) AS Recipe_CraftingDisciplines, 
            CAST(T.Flags AS [GW2DotNET.Persistence.RecipeUnlockTypes]) AS Recipe_Flags, 
            T.MinimumRating AS Recipe_MinimumRating, 
            T.OutputItemCount AS Recipe_OutputItemCount, 
            T.OutputItemId AS Recipe_OutputItemId, 
            T.TimeToCraft AS Recipe_TimeToCraft, 
            True AS _from0, 
            CASE WHEN T.Discriminator = N'GlovesRecipe' THEN True ELSE False END AS _from1, 
            CASE WHEN T.Discriminator = N'GreatSwordRecipe' THEN True ELSE False END AS _from2, 
            CASE WHEN T.Discriminator = N'HammerRecipe' THEN True ELSE False END AS _from3, 
            CASE WHEN T.Discriminator = N'HarpoonRecipe' THEN True ELSE False END AS _from4, 
            CASE WHEN T.Discriminator = N'HelmRecipe' THEN True ELSE False END AS _from5, 
            CASE WHEN T.Discriminator = N'InscriptionRecipe' THEN True ELSE False END AS _from6, 
            CASE WHEN T.Discriminator = N'InsigniaRecipe' THEN True ELSE False END AS _from7, 
            CASE WHEN T.Discriminator = N'LeggingsRecipe' THEN True ELSE False END AS _from8, 
            CASE WHEN T.Discriminator = N'LongBowRecipe' THEN True ELSE False END AS _from9, 
            CASE WHEN T.Discriminator = N'MaceRecipe' THEN True ELSE False END AS _from10, 
            CASE WHEN T.Discriminator = N'MealRecipe' THEN True ELSE False END AS _from11, 
            CASE WHEN T.Discriminator = N'PistolRecipe' THEN True ELSE False END AS _from12, 
            CASE WHEN T.Discriminator = N'PotionRecipe' THEN True ELSE False END AS _from13, 
            CASE WHEN T.Discriminator = N'RefinementEctoplasmRecipe' THEN True ELSE False END AS _from14, 
            CASE WHEN T.Discriminator = N'RefinementObsidianRecipe' THEN True ELSE False END AS _from15, 
            CASE WHEN T.Discriminator = N'RefinementRecipe' THEN True ELSE False END AS _from16, 
            CASE WHEN T.Discriminator = N'RifleRecipe' THEN True ELSE False END AS _from17, 
            CASE WHEN T.Discriminator = N'RingRecipe' THEN True ELSE False END AS _from18, 
            CASE WHEN T.Discriminator = N'ScepterRecipe' THEN True ELSE False END AS _from19, 
            CASE WHEN T.Discriminator = N'SeasoningRecipe' THEN True ELSE False END AS _from20, 
            CASE WHEN T.Discriminator = N'ShieldRecipe' THEN True ELSE False END AS _from21, 
            CASE WHEN T.Discriminator = N'ShortBowRecipe' THEN True ELSE False END AS _from22, 
            CASE WHEN T.Discriminator = N'ShouldersRecipe' THEN True ELSE False END AS _from23, 
            CASE WHEN T.Discriminator = N'SnackRecipe' THEN True ELSE False END AS _from24, 
            CASE WHEN T.Discriminator = N'SoupRecipe' THEN True ELSE False END AS _from25, 
            CASE WHEN T.Discriminator = N'SpearGunRecipe' THEN True ELSE False END AS _from26, 
            CASE WHEN T.Discriminator = N'StaffRecipe' THEN True ELSE False END AS _from27, 
            CASE WHEN T.Discriminator = N'SwordRecipe' THEN True ELSE False END AS _from28, 
            CASE WHEN T.Discriminator = N'TorchRecipe' THEN True ELSE False END AS _from29, 
            CASE WHEN T.Discriminator = N'TridentRecipe' THEN True ELSE False END AS _from30, 
            CASE WHEN T.Discriminator = N'UnknownRecipe' THEN True ELSE False END AS _from31, 
            CASE WHEN T.Discriminator = N'UpgradeComponentRecipe' THEN True ELSE False END AS _from32, 
            CASE WHEN T.Discriminator = N'WarHornRecipe' THEN True ELSE False END AS _from33, 
            CASE WHEN T.Discriminator = N'AmuletRecipe' THEN True ELSE False END AS _from34, 
            CASE WHEN T.Discriminator = N'AxeRecipe' THEN True ELSE False END AS _from35, 
            CASE WHEN T.Discriminator = N'BackpackRecipe' THEN True ELSE False END AS _from36, 
            CASE WHEN T.Discriminator = N'BagRecipe' THEN True ELSE False END AS _from37, 
            CASE WHEN T.Discriminator = N'BootsRecipe' THEN True ELSE False END AS _from38, 
            CASE WHEN T.Discriminator = N'BulkRecipe' THEN True ELSE False END AS _from39, 
            CASE WHEN T.Discriminator = N'CoatRecipe' THEN True ELSE False END AS _from40, 
            CASE WHEN T.Discriminator = N'ComponentRecipe' THEN True ELSE False END AS _from41, 
            CASE WHEN T.Discriminator = N'ConsumableRecipe' THEN True ELSE False END AS _from42, 
            CASE WHEN T.Discriminator = N'CookingIngredientRecipe' THEN True ELSE False END AS _from43, 
            CASE WHEN T.Discriminator = N'DaggerRecipe' THEN True ELSE False END AS _from44, 
            CASE WHEN T.Discriminator = N'DessertRecipe' THEN True ELSE False END AS _from45, 
            CASE WHEN T.Discriminator = N'DyeRecipe' THEN True ELSE False END AS _from46, 
            CASE WHEN T.Discriminator = N'EarringRecipe' THEN True ELSE False END AS _from47, 
            CASE WHEN T.Discriminator = N'FeastRecipe' THEN True ELSE False END AS _from48, 
            CASE WHEN T.Discriminator = N'FocusRecipe' THEN True ELSE False END AS _from49
        FROM CodeFirstDatabase.Recipe AS T
        WHERE T.Discriminator IN {N'AmuletRecipe', N'AxeRecipe', N'BackpackRecipe', N'BagRecipe', N'BootsRecipe', N'BulkRecipe', N'CoatRecipe', N'ComponentRecipe', N'ConsumableRecipe', N'CookingIngredientRecipe', N'DaggerRecipe', N'DessertRecipe', N'DyeRecipe', N'EarringRecipe', N'FeastRecipe', N'FocusRecipe', N'GlovesRecipe', N'GreatSwordRecipe', N'HammerRecipe', N'HarpoonRecipe', N'HelmRecipe', N'InscriptionRecipe', N'InsigniaRecipe', N'LeggingsRecipe', N'LongBowRecipe', N'MaceRecipe', N'MealRecipe', N'PistolRecipe', N'PotionRecipe', N'RefinementEctoplasmRecipe', N'RefinementObsidianRecipe', N'RefinementRecipe', N'RifleRecipe', N'RingRecipe', N'ScepterRecipe', N'SeasoningRecipe', N'ShieldRecipe', N'ShortBowRecipe', N'ShouldersRecipe', N'SnackRecipe', N'SoupRecipe', N'SpearGunRecipe', N'StaffRecipe', N'SwordRecipe', N'TorchRecipe', N'TridentRecipe', N'UnknownRecipe', N'UpgradeComponentRecipe', N'WarHornRecipe'}
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GwContext.CombatItem_Attributes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CombatItem_Attributes
        [GW2DotNET.Persistence.CombatItem_Attributes](T3.[CombatItem_Attributes.CombatItem_Attributes_Source], T3.[CombatItem_Attributes.CombatItem_Attributes_Target])
    FROM (
        SELECT -- Constructing CombatItem_Attributes_Source
            CreateRef(GwContext.Items, row(T2.[CombatItem_Attributes.CombatItem_Attributes_Source.ItemId], T2.[CombatItem_Attributes.CombatItem_Attributes_Source.Language]), [GW2DotNET.Persistence.CombatItem]) AS [CombatItem_Attributes.CombatItem_Attributes_Source], 
            T2.[CombatItem_Attributes.CombatItem_Attributes_Target]
        FROM (
            SELECT -- Constructing CombatItem_Attributes_Target
                T1.[CombatItem_Attributes.CombatItem_Attributes_Source.ItemId], 
                T1.[CombatItem_Attributes.CombatItem_Attributes_Source.Language], 
                CreateRef(GwContext.ItemAttributes, row(T1.[CombatItem_Attributes.CombatItem_Attributes_Target.Type], T1.[CombatItem_Attributes.CombatItem_Attributes_Target.Modifier]), [GW2DotNET.Persistence.ItemAttribute]) AS [CombatItem_Attributes.CombatItem_Attributes_Target]
            FROM (
                SELECT 
                    T.CombatItem_ItemId AS [CombatItem_Attributes.CombatItem_Attributes_Source.ItemId], 
                    T.CombatItem_Language AS [CombatItem_Attributes.CombatItem_Attributes_Source.Language], 
                    CAST(T.ItemAttribute_Type AS [GW2DotNET.Persistence.ItemAttributeType]) AS [CombatItem_Attributes.CombatItem_Attributes_Target.Type], 
                    T.ItemAttribute_Modifier AS [CombatItem_Attributes.CombatItem_Attributes_Target.Modifier], 
                    True AS _from0
                FROM CodeFirstDatabase.CombatItemItemAttribute AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for GwContext.UpgradeComponent_Attributes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UpgradeComponent_Attributes
        [GW2DotNET.Persistence.UpgradeComponent_Attributes](T3.[UpgradeComponent_Attributes.UpgradeComponent_Attributes_Source], T3.[UpgradeComponent_Attributes.UpgradeComponent_Attributes_Target])
    FROM (
        SELECT -- Constructing UpgradeComponent_Attributes_Source
            CreateRef(GwContext.Items, row(T2.[UpgradeComponent_Attributes.UpgradeComponent_Attributes_Source.ItemId], T2.[UpgradeComponent_Attributes.UpgradeComponent_Attributes_Source.Language]), [GW2DotNET.Persistence.UpgradeComponent]) AS [UpgradeComponent_Attributes.UpgradeComponent_Attributes_Source], 
            T2.[UpgradeComponent_Attributes.UpgradeComponent_Attributes_Target]
        FROM (
            SELECT -- Constructing UpgradeComponent_Attributes_Target
                T1.[UpgradeComponent_Attributes.UpgradeComponent_Attributes_Source.ItemId], 
                T1.[UpgradeComponent_Attributes.UpgradeComponent_Attributes_Source.Language], 
                CreateRef(GwContext.ItemAttributes, row(T1.[UpgradeComponent_Attributes.UpgradeComponent_Attributes_Target.Type], T1.[UpgradeComponent_Attributes.UpgradeComponent_Attributes_Target.Modifier]), [GW2DotNET.Persistence.ItemAttribute]) AS [UpgradeComponent_Attributes.UpgradeComponent_Attributes_Target]
            FROM (
                SELECT 
                    T.UpgradeComponent_ItemId AS [UpgradeComponent_Attributes.UpgradeComponent_Attributes_Source.ItemId], 
                    T.UpgradeComponent_Language AS [UpgradeComponent_Attributes.UpgradeComponent_Attributes_Source.Language], 
                    CAST(T.ItemAttribute_Type AS [GW2DotNET.Persistence.ItemAttributeType]) AS [UpgradeComponent_Attributes.UpgradeComponent_Attributes_Target.Type], 
                    T.ItemAttribute_Modifier AS [UpgradeComponent_Attributes.UpgradeComponent_Attributes_Target.Modifier], 
                    True AS _from0
                FROM CodeFirstDatabase.UpgradeComponentItemAttribute AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for GwContext.Recipe_Ingredients.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Recipe_Ingredients
        [GW2DotNET.Persistence.Recipe_Ingredients](T3.[Recipe_Ingredients.Recipe_Ingredients_Source], T3.[Recipe_Ingredients.Recipe_Ingredients_Target])
    FROM (
        SELECT -- Constructing Recipe_Ingredients_Source
            CreateRef(GwContext.Recipes, row(T2.[Recipe_Ingredients.Recipe_Ingredients_Source.RecipeId], T2.[Recipe_Ingredients.Recipe_Ingredients_Source.Language]), [GW2DotNET.Persistence.Recipe]) AS [Recipe_Ingredients.Recipe_Ingredients_Source], 
            T2.[Recipe_Ingredients.Recipe_Ingredients_Target]
        FROM (
            SELECT -- Constructing Recipe_Ingredients_Target
                T1.[Recipe_Ingredients.Recipe_Ingredients_Source.RecipeId], 
                T1.[Recipe_Ingredients.Recipe_Ingredients_Source.Language], 
                CreateRef(GwContext.Ingredients, row(T1.[Recipe_Ingredients.Recipe_Ingredients_Target.ItemId], T1.[Recipe_Ingredients.Recipe_Ingredients_Target.Count]), [GW2DotNET.Persistence.Ingredient]) AS [Recipe_Ingredients.Recipe_Ingredients_Target]
            FROM (
                SELECT 
                    T.Recipe_RecipeId AS [Recipe_Ingredients.Recipe_Ingredients_Source.RecipeId], 
                    T.Recipe_Language AS [Recipe_Ingredients.Recipe_Ingredients_Source.Language], 
                    T.Ingredient_ItemId AS [Recipe_Ingredients.Recipe_Ingredients_Target.ItemId], 
                    T.Ingredient_Count AS [Recipe_Ingredients.Recipe_Ingredients_Target.Count], 
                    True AS _from0
                FROM CodeFirstDatabase.RecipeIngredient AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
    }
}
